{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","document","getElementById","id","addEventListener","nodeName","printMessage","message","div","createElement","className","innerText","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,SAASC,eAAkBN,GAAAA,OAAAA,EAAQO,KAAMC,iBAAoBP,GAAAA,OAAAA,GAC3D,WACEE,EAAkBF,UAAAA,OAAAA,EAChBD,8BAAAA,OAAAA,EAAQS,SAAiBT,UAAAA,OAAAA,EAAQO,SAK3C,IAAMG,EAAe,SAACC,GACdC,IAAAA,EAAMP,SAASQ,cAAc,OAEnCD,EAAIE,UAAY,UAEhBF,EAAIG,UAAYJ,EAChBN,SAASW,KAAKC,OAAOL,IAGvBM,OAAOC,QAAU,CACfpB,QAAAA,EACAW,aAAAA","file":"main.cabb6f64.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    document.getElementById(`${element.id}`).addEventListener(`${eventName}`,\n      function() {\n        resolve(`It was ${eventName} on the element:\n        ${element.nodeName}, id: ${element.id}`);\n      });\n  });\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  div.className = 'message';\n\n  div.innerText = message;\n  document.body.append(div);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}